/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UserRouteRouteImport } from './routes/_user/route'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UserSettingsRouteImport } from './routes/_user/settings'
import { Route as AuthSignupRouteImport } from './routes/_auth/signup'
import { Route as AuthSigninRouteImport } from './routes/_auth/signin'
import { Route as UserFriendsIndexRouteImport } from './routes/_user/friends/index'
import { Route as UserChatsIndexRouteImport } from './routes/_user/chats/index'
import { Route as UserFriendsStatusRouteImport } from './routes/_user/friends/status'
import { Route as UserFriendsPendingRouteImport } from './routes/_user/friends/pending'

const UserRouteRoute = UserRouteRouteImport.update({
  id: '/_user',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UserSettingsRoute = UserSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => UserRouteRoute,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthSigninRoute = AuthSigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => AuthRouteRoute,
} as any)
const UserFriendsIndexRoute = UserFriendsIndexRouteImport.update({
  id: '/friends/',
  path: '/friends/',
  getParentRoute: () => UserRouteRoute,
} as any)
const UserChatsIndexRoute = UserChatsIndexRouteImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => UserRouteRoute,
} as any)
const UserFriendsStatusRoute = UserFriendsStatusRouteImport.update({
  id: '/friends/status',
  path: '/friends/status',
  getParentRoute: () => UserRouteRoute,
} as any)
const UserFriendsPendingRoute = UserFriendsPendingRouteImport.update({
  id: '/friends/pending',
  path: '/friends/pending',
  getParentRoute: () => UserRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/settings': typeof UserSettingsRoute
  '/friends/pending': typeof UserFriendsPendingRoute
  '/friends/status': typeof UserFriendsStatusRoute
  '/chats': typeof UserChatsIndexRoute
  '/friends': typeof UserFriendsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/settings': typeof UserSettingsRoute
  '/friends/pending': typeof UserFriendsPendingRoute
  '/friends/status': typeof UserFriendsStatusRoute
  '/chats': typeof UserChatsIndexRoute
  '/friends': typeof UserFriendsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_user': typeof UserRouteRouteWithChildren
  '/_auth/signin': typeof AuthSigninRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_user/settings': typeof UserSettingsRoute
  '/_user/friends/pending': typeof UserFriendsPendingRoute
  '/_user/friends/status': typeof UserFriendsStatusRoute
  '/_user/chats/': typeof UserChatsIndexRoute
  '/_user/friends/': typeof UserFriendsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/signin'
    | '/signup'
    | '/settings'
    | '/friends/pending'
    | '/friends/status'
    | '/chats'
    | '/friends'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/signin'
    | '/signup'
    | '/settings'
    | '/friends/pending'
    | '/friends/status'
    | '/chats'
    | '/friends'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_user'
    | '/_auth/signin'
    | '/_auth/signup'
    | '/_user/settings'
    | '/_user/friends/pending'
    | '/_user/friends/status'
    | '/_user/chats/'
    | '/_user/friends/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  UserRouteRoute: typeof UserRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_user': {
      id: '/_user'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UserRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_user/settings': {
      id: '/_user/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof UserSettingsRouteImport
      parentRoute: typeof UserRouteRoute
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/signin': {
      id: '/_auth/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof AuthSigninRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_user/friends/': {
      id: '/_user/friends/'
      path: '/friends'
      fullPath: '/friends'
      preLoaderRoute: typeof UserFriendsIndexRouteImport
      parentRoute: typeof UserRouteRoute
    }
    '/_user/chats/': {
      id: '/_user/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof UserChatsIndexRouteImport
      parentRoute: typeof UserRouteRoute
    }
    '/_user/friends/status': {
      id: '/_user/friends/status'
      path: '/friends/status'
      fullPath: '/friends/status'
      preLoaderRoute: typeof UserFriendsStatusRouteImport
      parentRoute: typeof UserRouteRoute
    }
    '/_user/friends/pending': {
      id: '/_user/friends/pending'
      path: '/friends/pending'
      fullPath: '/friends/pending'
      preLoaderRoute: typeof UserFriendsPendingRouteImport
      parentRoute: typeof UserRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface UserRouteRouteChildren {
  UserSettingsRoute: typeof UserSettingsRoute
  UserFriendsPendingRoute: typeof UserFriendsPendingRoute
  UserFriendsStatusRoute: typeof UserFriendsStatusRoute
  UserChatsIndexRoute: typeof UserChatsIndexRoute
  UserFriendsIndexRoute: typeof UserFriendsIndexRoute
}

const UserRouteRouteChildren: UserRouteRouteChildren = {
  UserSettingsRoute: UserSettingsRoute,
  UserFriendsPendingRoute: UserFriendsPendingRoute,
  UserFriendsStatusRoute: UserFriendsStatusRoute,
  UserChatsIndexRoute: UserChatsIndexRoute,
  UserFriendsIndexRoute: UserFriendsIndexRoute,
}

const UserRouteRouteWithChildren = UserRouteRoute._addFileChildren(
  UserRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  UserRouteRoute: UserRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
